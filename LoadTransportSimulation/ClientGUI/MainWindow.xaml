<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:Converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf" x:Class="WPFLoadSimulation.MainWindow"
        Title="Load Simulation" Height="546.26" Width="868.4"
         TextElement.FontWeight="Normal"
        TextElement.FontSize="11">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="WhiteSmoke" Offset="0.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.Static.Border" Color="WhiteSmoke"/>
        <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFC2DCDA" Offset="0.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="White"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="WhiteSmoke"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#FFC7CACA"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#FFC7CACA"/>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="White"/>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="#FF181D1D"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                                <Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="materialDesign:RippleAssist.Feedback" Value="White"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth1"/>
            <Setter Property="FontWeight" Value="Regular"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,4"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2">
                                    <Border.Effect>
                                        <Binding Path="(materialDesign:ShadowAssist.ShadowDepth)" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <Converters:ShadowConverter/>
                                            </Binding.Converter>
                                        </Binding>
                                    </Border.Effect>
                                </Border>
                            </AdornerDecorator>
                            <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="WhiteSmoke">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="135*"/>
            <ColumnDefinition Width="727*"/>
        </Grid.ColumnDefinitions>
        <TabControl x:Name ="LoadsTabControl" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch"   Grid.ColumnSpan="2" >
            <TabItem Header="Loads" Padding="20,5" >
                <Grid Background="WhiteSmoke" >
                    <TabControl HorizontalAlignment="Stretch"   VerticalAlignment="Stretch"  >
                        <TabItem Header="Available loads" Padding="15,2" Height="22"  VerticalAlignment="Bottom">
                            <Grid Background="#FFE5E5E5" IsManipulationEnabled="True" Margin="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="180*"/>
                                    <ColumnDefinition Width="667*"/>
                                </Grid.ColumnDefinitions>
                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.ColumnSpan="2" Margin="0,0,0.4,-0.4">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="4.5*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="2.5*"/>
                                        <RowDefinition Height="3*"/>
                                    </Grid.RowDefinitions>
                                    <DataGrid x:Name="LoadsAvailableDGW" FontSize="12" AutoGenerateColumns="false" ItemsSource="{Binding Path=Load, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"   ToolTip="Double click on load to add it to route, or select multiple with Ctrl and click button below" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="0" Grid.RowSpan="2"  MouseDoubleClick="LoadsAvailableDGW_MouseDoubleClick" IsReadOnly="True" CanUserDeleteRows="False" Margin="5,5,0,5" OverridesDefaultStyle="True" SelectionChanged="LoadsAvailableDGW_SelectionChanged" PreviewMouseDown="LoadsAvailableDGW_PreviewMouseDown">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Binding="{Binding StartLocationCity}" ClipboardContentBinding="{x:Null}" Header="Start city" Width="*"/>
                                            <DataGridTextColumn Binding="{Binding EndLocationCity}" ClipboardContentBinding="{x:Null}" Header="End City" Width="*"/>
                                            <DataGridTextColumn Binding="{Binding MaxArrivalTime}" ClipboardContentBinding="{x:Null}" Header="Due" Width="*"/>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                    <Button x:Name="bt_LoadsAddToRoute" Click="bt_LoadsAddToRoute_Click" Content="Add selected loads to route" Grid.Row="2" VerticalAlignment="Bottom" Height="30" Margin="10,5,5,9"/>
                                    <TabControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="1" Grid.Row="0" Margin="5,5,5,5">
                                        <TabItem Header="Selected Load" Padding="13,2">
                                            <Grid Background="WhiteSmoke" >
                                                <Grid HorizontalAlignment="Stretch"  VerticalAlignment="Stretch">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="auto"/>
                                                        <RowDefinition Height="5*"/>
                                                    </Grid.RowDefinitions>
                                                    <ListView x:Name="lv_loadDetails" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="0"  Grid.Row="1" Grid.RowSpan="1" Margin="0,0,15,0" TextOptions.TextFormattingMode="Display" OverridesDefaultStyle="True">
                                                        <ListView.View>
                                                            <GridView>
                                                                <GridViewColumn Header="LOAD" DisplayMemberBinding="{Binding description}" Width="auto" />
                                                                <GridViewColumn Header="" DisplayMemberBinding="{Binding value}" Width="auto"/>
                                                            </GridView>
                                                        </ListView.View>
                                                    </ListView>
                                                    <ListView x:Name="lv_loadClient" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="1"  Grid.Row="1" Grid.RowSpan="1" Margin="20,0,10,0" OverridesDefaultStyle="True">
                                                        <ListView.View>
                                                            <GridView>
                                                                <GridViewColumn Header="CLIENT" DisplayMemberBinding="{Binding description}" Width="auto"/>
                                                                <GridViewColumn Header="" DisplayMemberBinding="{Binding value}" Width="auto"/>
                                                            </GridView>
                                                        </ListView.View>
                                                    </ListView>

                                                </Grid>
                                            </Grid>
                                        </TabItem>
                                        <TabItem Name="mapTab" Header="See load on map" Padding="13,3" TouchUp="TabItem_TouchUp">
                                            <Grid Background="#FFE5E5E5">
                                                <WebBrowser x:Name="web_load" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Source="http://maps.google.com" />
                                            </Grid>
                                        </TabItem>
                                    </TabControl>

                                    <Grid Background="WhiteSmoke" Grid.Column="1" Grid.Row="1" Margin="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="160"/>
                                            <ColumnDefinition Width="4*" />
                                            <ColumnDefinition Width="4*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="7*"/>
                                            <RowDefinition Height="1.5*"/>
                                            <RowDefinition Height="auto"/>
                                        </Grid.RowDefinitions>

                                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" Width="23" Height="23" 
                                        Name="btn_emptySelectedLoadsLV" Margin="0,15,10,0" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Row="1" Grid.Column="1"
                                        ToolTip="Empty current selection" RenderTransformOrigin="0.526,0.5" Click="btn_emptySelectedLoadsLV_Click" >
                                            <materialDesign:PackIcon Kind="Delete" Height="13" Width="13" />
                                        </Button>

                                        <Label Content="Current loads for new route" HorizontalAlignment="Left"  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Bottom" Padding="0,0,0,0" FontWeight="SemiBold" Margin="15,10,0,0" FontSize="13"/>
                                        <ListView x:Name="lv_selectedLoadsForRoute"  ItemsSource="{Binding}"  ToolTip="Double click to remove a load" HorizontalAlignment="Stretch"  Grid.Row="1" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Stretch" Margin="0,0,40,0" MouseDoubleClick="lv_selectedLoadsForRoute_MouseDoubleClick" IsManipulationEnabled="True" OverridesDefaultStyle="True" TextOptions.TextFormattingMode="Display">
                                            <ListView.View>
                                                <GridView>
                                                    <GridViewColumn Header="Start" DisplayMemberBinding="{Binding StartLocationCity}" Width="auto"/>
                                                    <GridViewColumn Header="End" DisplayMemberBinding="{Binding EndLocationCity}" Width="auto"/>
                                                    <GridViewColumn Header="Deadline" DisplayMemberBinding="{Binding MaxArrivalTime}" Width="auto"/>
                                                    <GridViewColumn Header="Content" DisplayMemberBinding="{Binding Content}" Width="auto"/>
                                                    <GridViewColumn Header="Salary" DisplayMemberBinding="{Binding FullSalaryEur}" Width="auto"/>
                                                </GridView>
                                            </ListView.View>
                                        </ListView>
                                        <Label Content="Assign a truck to the route:" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="2" Grid.RowSpan="1" VerticalAlignment="Bottom" Padding="0,0,0,0" Width="160" FontWeight="DemiBold" Margin="10,0,0,0"/>
                                        <ComboBox x:Name="cb_assignTruckToRoute" ItemsSource="{Binding Path=Truck, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"  FontSize="12" Background="WhiteSmoke" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="1"  HorizontalAlignment="Stretch" MaxHeight="30" VerticalAlignment="Bottom" SelectionChanged="cb_assignTruckToRoute_SelectionChanged" Margin="5,5,20,0" />
                                        <Button x:Name="bt_calculateEstimation" Content="Calculate estimation" HorizontalAlignment="Stretch" Grid.Row="3" VerticalAlignment="Stretch" Margin="5,5,20,5" Height="30" Click="bt_calculateEstimation_Click" IsEnabled="False" Grid.ColumnSpan="2"/>

                                        <materialDesign:Snackbar 
                                        HorizontalAlignment="Stretch" VerticalAlignment="Bottom" 
                                        MessageQueue="{materialDesign:MessageQueue}" 
                                        x:Name="SnackbarLoads" 
                                        Grid.Row="2" 
                                        Grid.ColumnSpan="2" />

                                        <Button x:Name="bt_submitRoute" Content="Submit Route" Grid.Column="2" HorizontalAlignment="Stretch"  Grid.Row="3" VerticalAlignment="Stretch" Height="30" Margin="5,5,5,5" FontWeight="Medium" Click="bt_submitRoute_Click" IsEnabled="False" />

                                        <ListView x:Name="lv_routeEstimation" Grid.Column="2"  HorizontalAlignment="Stretch"  Grid.Row="1" Grid.RowSpan="2" VerticalAlignment="Stretch" Margin="10,0,0,0"  OverridesDefaultStyle="True" Background="White" >
                                            <ListView.View>
                                                <GridView>
                                                    <GridViewColumn Header="Estimation" DisplayMemberBinding="{Binding description}" />
                                                    <GridViewColumn  DisplayMemberBinding="{Binding result}" />
                                                    <GridViewColumn  DisplayMemberBinding="{Binding unit}" />
                                                </GridView>
                                            </ListView.View>
                                        </ListView>
                                        <materialDesign:Snackbar 
                                        HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                                        MessageQueue="{materialDesign:MessageQueue}" 
                                        x:Name="SnackbarEstimation" 
                                        Grid.Row="2" 
                                        Grid.Column="2"
                                        Grid.ColumnSpan="1" />
                                    </Grid>
                                </Grid>
                            </Grid>
                        </TabItem>
                        <TabItem x:Name="tab_routes" Header="Active or Delivered" Padding="15,2" Margin="-2.4,0,-2,0.4" >
                            <Grid Background="#FFE5E5E5" Margin="3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="176*"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="175*"/>
                                    <RowDefinition Height="30*"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <!--<RadioButton Content="All routes" Grid.Row="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,10,0,0" />
                                <RadioButton Content="Currently Active" Grid.Row="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="90,10,0,0"/>
                                <RadioButton Content="Finished" Grid.Row="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="220,10,0,0"/>-->
                                <Label Content="Route information with estimation" Grid.ColumnSpan="2" HorizontalAlignment="Left" Grid.Row="1" VerticalAlignment="Bottom" FontWeight="SemiBold" Padding="0" Margin="5,10,0,0"/>

                                <DataGrid x:Name="routesDGV" IsSynchronizedWithCurrentItem="True" Margin="5" HorizontalAlignment="Stretch"  Grid.Row="2" ItemsSource="{Binding}" VerticalAlignment="Stretch" AutoGenerateColumns="False" SelectionChanged="routesDGV_SelectionChanged" SelectionMode="Single" CanUserDeleteRows="False" CanUserAddRows="False" >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding StartLocation}" ClipboardContentBinding="{x:Null}" Header="Started location" IsReadOnly="True" Width="*" />
                                        <DataGridTextColumn Binding="{Binding EndLocation}" ClipboardContentBinding="{x:Null}" Header="End location" IsReadOnly="True" Width="*"/>
                                        <DataGridTextColumn Binding="{Binding NrOfLoads}" ClipboardContentBinding="{x:Null}" Header="Loads" IsReadOnly="True" Width="*"/>
                                        <DataGridTextColumn Binding="{Binding Truck.LicencePlate}" ClipboardContentBinding="{x:Null}" Header="Truck" IsReadOnly="True" Width="*"/>
                                        <DataGridTextColumn Binding="{Binding Driver}" ClipboardContentBinding="{x:Null}" Header="Driver" IsReadOnly="True" Width="*"/>
                                        <DataGridTextColumn Binding="{Binding StartTime}" ClipboardContentBinding="{x:Null}" Header="Start time" IsReadOnly="True" Width="*"/>
                                        <DataGridTextColumn Binding="{Binding EstDistanceKm}" ClipboardContentBinding="{x:Null}" Header="Estimated &#xA;km" IsReadOnly="True" Width="*"/>
                                        <DataGridTextColumn Binding="{Binding EstTimeDrivingTimeSpan}" ClipboardContentBinding="{x:Null}" Header="Estimated &#xA;time driving" IsReadOnly="True" Width="*"/>
                                        <DataGridTextColumn Binding="{Binding EstFuelConsumptionLiters}" ClipboardContentBinding="{x:Null}" Header="Estimated &#xA;fuel consump" IsReadOnly="True" Width="*"/>
                                        <DataGridTextColumn Binding="{Binding EstFuelCost}" ClipboardContentBinding="{x:Null}" Header="Estimated &#xA;cost" IsReadOnly="True" Width="*"/>
                                        <DataGridTextColumn Binding="{Binding TotalEstimatedSalary}" ClipboardContentBinding="{x:Null}" Header="Estimated &#xA;salary" IsReadOnly="True" Width="*"/>
                                        <DataGridTextColumn Binding="{Binding EndTime}" ClipboardContentBinding="{x:Null}" Header="End time" Width="*" FontWeight="Bold"/>
                                        <DataGridTextColumn Binding="{Binding ActDistanceKm}" ClipboardContentBinding="{x:Null}" Header="Actual &#xA;km" Width="*" FontWeight="Bold"/>
                                        <DataGridTextColumn Binding="{Binding ActTimeDrivingTimeSpan}" ClipboardContentBinding="{x:Null}" Header="Actual&#xA;time driving" Width="*" FontWeight="Bold"/>
                                        <DataGridTextColumn Binding="{Binding ActFuelConsumptionLiters}" ClipboardContentBinding="{x:Null}" Header="Actual&#xA;fuel used" Width="*" FontWeight="Bold"/>
                                        <DataGridTextColumn Binding="{Binding ActFuelCost}" ClipboardContentBinding="{x:Null}" Header="Actual &#xA;cost" Width="*" Foreground="Black" FontWeight="Bold"/>
                                        <DataGridTextColumn Binding="{Binding TotalActualSalary}" ClipboardContentBinding="{x:Null}" Header="Actual &#xA;salary" Width="*" Foreground="#FF040000" FontWeight="Bold" />
                                        <DataGridTextColumn Binding="{Binding FinalRevenue}" ClipboardContentBinding="{x:Null}" Header="Revenue" Width="*"/>
                                    </DataGrid.Columns>
                                </DataGrid>

                                <Label Content="Loads within selected route" HorizontalAlignment="Left" Grid.Row="4" Grid.ColumnSpan="2" VerticalAlignment="Bottom" FontWeight="SemiBold" Padding="0" Margin="5,10,0,0"/>
                                <DataGrid x:Name="LoadsFromRouteDGV" ItemsSource="{Binding}" Margin="5" AutoGenerateColumns="false" HorizontalAlignment="Stretch"  Grid.Row="5" Grid.ColumnSpan="2" VerticalAlignment="Stretch" SelectionMode="Single" CanUserDeleteRows="False">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding StartLocationCity}" ClipboardContentBinding="{x:Null}" Header="Start &#xA;Location" Width="*"/>
                                        <DataGridTextColumn Binding="{Binding EndLocationCity}" ClipboardContentBinding="{x:Null}" Header="End &#xA;Location" Width="*"/>

                                        <DataGridTextColumn Binding="{Binding Client.Name}" ClipboardContentBinding="{x:Null}" Header="Client" Width="*"/>
                                        <DataGridTextColumn Binding="{Binding Content}" ClipboardContentBinding="{x:Null}" Header="Content" Width="*"/>
                                        <DataGridTextColumn Binding="{Binding WeightKg}" ClipboardContentBinding="{x:Null}" Header="Weight" Width="*"/>
                                        <DataGridTextColumn Binding="{Binding MaxArrivalTime}" ClipboardContentBinding="{x:Null}" Header="Max &#xA;Delivery Time" Width="*"/>
                                        <DataGridTextColumn Binding="{Binding FullSalaryEur}" ClipboardContentBinding="{x:Null}" Header="Full &#xA;Salary" Width="*"/>
                                        <DataGridTextColumn Binding="{Binding DelayFeePercHour}" ClipboardContentBinding="{x:Null}" Header="Delay fee &#xA;%per h" Width="*"/>
                                        <DataGridTextColumn Binding="{Binding FinalSalaryEur}" ClipboardContentBinding="{x:Null}" Header="Final &#xA;Salary" Width="*"/>
                                        <DataGridTextColumn Binding="{Binding ActArrivalTime}" ClipboardContentBinding="{x:Null}" Header="Time &#xA;arrived" Width="*"/>
                                        <DataGridTextColumn Header="Comment"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button Content="Mark route as delivered" HorizontalAlignment="Left"  Grid.Row="6" VerticalAlignment="Bottom" Height="30" Width="200" Margin="5,0,0,-0.333" Grid.RowSpan="2" Click="bt_MarkRouteDelivered_Click" />


                            </Grid>
                        </TabItem>
                    </TabControl>
                </Grid>
            </TabItem>
            <TabItem Header="Trucks" Padding="20,5">

                <Grid Background="#FFE5E5E5"  >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="5*"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="4.5*" MaxHeight="240"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" HorizontalAlignment="Stretch" Orientation="Horizontal" Grid.ColumnSpan="3"/>
                    <Label Content="Click on a truck to see maintenance schedule below" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Row="0" Padding="0" Grid.ColumnSpan="2" Margin="5,5,5,0" />
                    <DataGrid x:Name ="TrucksDGV" Margin="5,0,5,5" ItemsSource="{Binding Path=Truck, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" IsSynchronizedWithCurrentItem="True" AutoGenerateColumns="False" HorizontalAlignment="Stretch"  Grid.Row="1" Grid.ColumnSpan="3" VerticalAlignment="Stretch" SelectionMode="Single" CanUserDeleteRows="False" HorizontalContentAlignment="Stretch" SelectionChanged="TrucksDGV_SelectionChanged" >
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding LicencePlate}" ClipboardContentBinding="{x:Null}" Header="Licence &#xA;Plate" Width="*"/>
                            <DataGridTextColumn Binding="{Binding CurrentDriver}" Header="Driver"  Width="*"/>
                            <DataGridTextColumn Binding="{Binding LocationCity}" ClipboardContentBinding="{x:Null}" Header="Location" Width="*"/>
                            <DataGridTextColumn Binding="{Binding IsBusy}" ClipboardContentBinding="{x:Null}" Header="Is Busy" Width="auto"/>
                            <DataGridTextColumn Binding="{Binding PayloadCapacityKg}" ClipboardContentBinding="{x:Null}" Header="Payload &#xA;Capacity" Width="*"/>
                            <DataGridTextColumn Binding="{Binding AvgFuelConsumpt}" ClipboardContentBinding="{x:Null}" Header="Avg fuel &#xA;consump" Width="*"/>
                            <DataGridTextColumn Binding="{Binding WeightKg}" ClipboardContentBinding="{x:Null}" Header="Weight Kg" Width="*"/>
                            <DataGridTextColumn Binding="{Binding HeightInMeters}" ClipboardContentBinding="{x:Null}" Header="Height M" Width="*"/>
                            <DataGridTextColumn Binding="{Binding WidthInMeters}" ClipboardContentBinding="{x:Null}" Header="Width M" Width="*"/>
                            <DataGridTextColumn Binding="{Binding LengthInMeters}" ClipboardContentBinding="{x:Null}" Header="Length M" Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <StackPanel HorizontalAlignment="Stretch" Grid.Row="3" Grid.RowSpan="1" VerticalAlignment="Stretch" Orientation="Horizontal" Grid.ColumnSpan="1" Grid.Column="0" >
                        <Label Content="Maintenance schedule of truck: " HorizontalAlignment="Left" VerticalAlignment="Bottom" Padding="0" FontWeight="SemiBold" Margin="5,15,0,0"/>
                        <Label Content="#licenceplate" HorizontalAlignment="Left" VerticalAlignment="Bottom"  Padding="10,0"/>
                    </StackPanel>
                    <DataGrid Name="MaintenanceDGV" AutoGenerateColumns="False" ItemsSource="{Binding Path=TruckMaintenance, Mode=TwoWay}" HorizontalAlignment="Stretch"  Grid.Row="5" VerticalAlignment="Stretch"  Grid.Column="0" Margin="5,0,20,0" CanUserDeleteRows="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding ActionPerformed}" ClipboardContentBinding="{x:Null}" Header="Action Performed" Width="*"/>
                            <DataGridTextColumn Binding="{Binding Driver}" ClipboardContentBinding="{x:Null}" Header="Driver" Width="*"/>
                            <DataGridTextColumn Binding="{Binding Date}" ClipboardContentBinding="{x:Null}" Header="Date" Width="*"/>
                            <DataGridTextColumn Binding="{Binding Cost}" ClipboardContentBinding="{x:Null}" Header="Cost" Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Label Content="Add service for selected truck:" Grid.Column="1" HorizontalAlignment="Left" Grid.Row="3" VerticalAlignment="Bottom" Margin="10,0" Padding="5,0" FontWeight="SemiBold" />
                    <Grid Grid.Column="1" HorizontalAlignment="Stretch"  Grid.Row="5" VerticalAlignment="Stretch" Grid.RowSpan="2" Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition />
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Content="Driver:" HorizontalAlignment="Left"  Grid.Row="0" VerticalAlignment="Center" Margin="10,0,0,0"/>
                        <Label Content="Action:" HorizontalAlignment="Left"  Grid.Row="1" VerticalAlignment="Center" Margin="10,0,0,0"/>
                        <Label Content="Date:" HorizontalAlignment="Left"  Grid.Row="2" VerticalAlignment="Center" Margin="10,0,0,0"/>
                        <Label Content="Cost:" HorizontalAlignment="Left"  Grid.Row="3" VerticalAlignment="Center" Margin="10,0,0,0"/>
                        <ComboBox Name="cb_maintenanceDriver" Grid.Column="1" HorizontalAlignment="Stretch"  Grid.Row="0" VerticalAlignment="Stretch" MaxHeight="30"/>
                        <TextBox Name="tb_maintenanceAction" Grid.Column="1" HorizontalAlignment="Stretch"  Grid.Row="1" VerticalAlignment="Stretch" MaxHeight="30"/>
                        <DatePicker Name="dp_maintenanceDate" Grid.Column="1" HorizontalAlignment="Stretch"  Grid.Row="2" VerticalAlignment="Stretch" MaxHeight="30"/>
                        <TextBox Name="tb_maintenanceCost" Grid.Column="1" HorizontalAlignment="Stretch"  Grid.Row="3" VerticalAlignment="Stretch" MaxHeight="30" />
                        <Button Name="bt_addMaintenance" Content="Add service maintenance" Grid.Column="1" HorizontalAlignment="Stretch"  Grid.Row="5" VerticalAlignment="Stretch" MaxHeight="30" Click="bt_addMaintenance_Click"/>
                    </Grid>
                    <Label Content="Assign new driver:" Grid.Column="2" Grid.Row="3" FontWeight="SemiBold" VerticalAlignment="Bottom" Padding="0"/>
                    <ComboBox x:Name="cb_assignDriverToTruck" ItemsSource="{Binding Path=Driver, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2" Grid.Row="5" HorizontalAlignment="Stretch" Height="30" Margin="10" VerticalAlignment="Top" SelectionChanged="cb_assignDriverToTruck_SelectionChanged" PreviewMouseDown="cb_assignDriverToTruck_PreviewMouseDown"/>
                    <Button x:Name="bt_TrucksDeleteSelected" Content="Delete selected truck" Grid.Column="2" HorizontalAlignment="Right" Grid.Row="2" VerticalAlignment="Top" Margin="10" Width="200" Height="30" Click="bt_TrucksDeleteSelected_Click"/>
                    <Button x:Name="TrucksAddNew" Click="TrucksAddNew_Click" Content="Add new truck" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Grid.Row="2" VerticalAlignment="Top" Margin="10" Width="200" Height="30"/>
                </Grid>
            </TabItem>


            <TabItem Header="Drivers" Padding="20,5" HorizontalContentAlignment="Center">
                <Grid Background="#FFE5E5E5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition />
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" HorizontalAlignment="Stretch" Orientation="Horizontal"/>

                    <DataGrid x:Name="DriversDGV" AutoGenerateColumns="false" ItemsSource="{Binding}" HorizontalAlignment="Stretch" Grid.Row="1" VerticalAlignment="Stretch" Grid.ColumnSpan="2" Grid.RowSpan="1" Margin="5,5,5,25" SelectionMode="Single" CanUserDeleteRows="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding FirstName}" ClipboardContentBinding="{x:Null}" Header="First Name" Width="*"/>
                            <DataGridTextColumn Binding="{Binding LastName}" ClipboardContentBinding="{x:Null}" Header="Last Name" Width="*"/>
                            <DataGridTextColumn Binding="{Binding Phone}" ClipboardContentBinding="{x:Null}" Header="Phone" Width="*"/>
                            <DataGridTextColumn Binding="{Binding Email}" ClipboardContentBinding="{x:Null}" Header="Email" Width="*"/>
                            <DataGridTextColumn Binding="{Binding IsBusy}" ClipboardContentBinding="{x:Null}" Header="Is Busy" />
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="DriverDeleteSelected" Content="Delete selected driver"  HorizontalAlignment="Right" Grid.Row="2" Grid.Column="1" VerticalAlignment="Top" Width="200" Height="30" Click="bt_DriverDeleteSelected_Click"/>
                    <Button x:Name="DriversAddNew" Click="DriversAddNew_Click" Content="Add new driver"  HorizontalAlignment="Left" Grid.Row="2" Grid.Column="0" VerticalAlignment="Top" Width="250" Height="30"/>

                </Grid>
            </TabItem>
            <TabItem Header="Clients" Padding="20,5" HorizontalContentAlignment="Center" >
                <Grid Background="#FFE5E5E5" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition />
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" HorizontalAlignment="Stretch" Orientation="Horizontal"/>

                    <DataGrid x:Name ="ClientDGV" AutoGenerateColumns="False" ItemsSource="{Binding}" IsSynchronizedWithCurrentItem="True" HorizontalAlignment="Stretch" Grid.Row="1" VerticalAlignment="Stretch" Grid.ColumnSpan="2" Grid.RowSpan="1" Margin="5,5,5,25" SelectionMode="Single" CanUserDeleteRows="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Name}" ClipboardContentBinding="{x:Null}" Header="First Name" Width="*"/>
                            <DataGridTextColumn Binding="{Binding Phone}" ClipboardContentBinding="{x:Null}" Header="Phone" Width="*"/>
                            <DataGridTextColumn Binding="{Binding Email}" ClipboardContentBinding="{x:Null}" Header="Email" Width="*"/>
                            <DataGridTextColumn Binding="{Binding Address}" ClipboardContentBinding="{x:Null}" Header="Address" Width="*"/>
                            <DataGridTextColumn Binding="{x:Null}" ClipboardContentBinding="{x:Null}" Header="Company" />
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name ="ClientsAddNew" Click="ClientsAddNew_Click" Content="Add new client" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Stretch" MaxHeight="30" Width="250" />

                    <Button x:Name="bt_ClientsDeleteSelected" Content="Delete selected client"  HorizontalAlignment="Right" Grid.Row="2" Grid.Column="1" VerticalAlignment="Top" Width="200" Height="30" Click="bt_ClientsDeleteSelected_Click"/>
                </Grid>
            </TabItem>
            <TabItem Header="Report" Padding="20,5">
                <Grid Background="#FFE5E5E5" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="25*"/>
                        <ColumnDefinition Width="87*"/>
                        <ColumnDefinition Width="745*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <StackPanel HorizontalAlignment="Stretch" Grid.Row="0"  VerticalAlignment="Stretch" Orientation="Horizontal" Margin="10,10,9.8,10" Grid.ColumnSpan="3">
                        <Label Content="Time period for report:" HorizontalAlignment="Left"  Padding="0" VerticalAlignment="Center" Margin="20,4,10,0"/>
                        <Label Content="From:" HorizontalAlignment="Left"  Padding="0" VerticalAlignment="Center" Margin="20,4,0,0"/>
                        <DatePicker Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" FirstDayOfWeek="Monday"  Width="auto" Margin="10,4,10,0" IsEnabled="False"/>
                        <Label Content="To:" HorizontalAlignment="Left"  Padding="0" VerticalAlignment="Center" Margin="20,4,0,0"/>
                        <DatePicker Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" FirstDayOfWeek="Monday"  Width="auto" Margin="10,4,10,0" IsEnabled="False" />
                        <Button x:Name="bt_generatereport" Content="Generate report" HorizontalAlignment="Stretch"  VerticalAlignment="Bottom" Margin="30,0,10,0" Padding="10,3" Width="120" Click="bt_generatereport_Click"/>
                        <Button x:Name="bt_downloadreport" Content="Download" HorizontalAlignment="Stretch" Margin="30,4,5,0" Padding="10,3" Click="bt_downloadreport_Click" IsEnabled="False"/>
                    </StackPanel>
                    <TextBox x:Name="tb_report" Grid.Row="1" Text="Your report displayed" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="20,20,19.8,20" Grid.ColumnSpan="3"/>

                </Grid>
            </TabItem>
            <TabItem Header="Profile" Padding="20,5">
                <Grid Background="#FFE5E5E5" Margin="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="1*" MaxHeight="30"/>
                        <RowDefinition Height="1*" MaxHeight="30"/>
                        <RowDefinition Height="1*" MaxHeight="30"/>
                        <RowDefinition Height="1*" MaxHeight="30"/>
                        <RowDefinition Height="1*" MaxHeight="30"/>
                        <RowDefinition Height="1*" MaxHeight="30"/>
                        <RowDefinition Height="1*" MaxHeight="30"/>
                        <RowDefinition Height="1*" MaxHeight="30"/>
                        <RowDefinition Height="8*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="Company:" Margin="10,10,0,5" Grid.Row="0" FontSize="14" FontWeight="SemiBold"/>
                    <Label Content="Address:" Margin="10,0" Grid.Row="1"/>
                    <Label Content="Name:" Margin="10,0" Grid.Row="3"/>
                    <Label Content="Phone:" Margin="10,0" Grid.Row="4"/>

                    <Button x:Name ="ProfileChangeInfo" Content="Change user info" Grid.Row="5" Grid.Column="1" HorizontalAlignment="Stretch" Click="ProfileChangeInfo_Click"/>

                    <Label Name="companyName" Content="Your company" Margin="10,10,0,5" Grid.Row="0" FontSize="14"  Grid.Column="1"/>
                    <Label Name="companyAddress" Content="Company address" Margin="10,0" Grid.Row="1" Grid.Column="1"/>
                    <Label Name="ProfileName" Content="John" Margin="10,0" Grid.Row="3" Grid.Column="1"/>
                    <Label Name="ProfilePhone" Content="+00 00000000" Margin="10,0" Grid.Row="4" Grid.Column="1"/>


                    <TextBox x:Name="ProfileEditName" Grid.Row="3" Grid.Column="2" HorizontalAlignment="Stretch" Width="200" Visibility="Hidden" VerticalContentAlignment="Center" Text="John"/>
                    <TextBox x:Name="ProfileEditPhone" Grid.Row="4" Grid.Column="2" HorizontalAlignment="Stretch" Width="200" Visibility="Hidden" VerticalContentAlignment="Center" Text="+00 00000000"/>
                  
                    <Button x:Name="ProfileSaveChanges" Content="Save changes" Grid.Row="5" Grid.Column="2" HorizontalAlignment="Stretch" Width="200" Visibility="Hidden" Click="ProfileSaveChanges_Click"/>
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
